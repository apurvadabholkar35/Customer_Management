{
  "openapi": "3.0.0",
  "info": {
    "title": "Student Management API",
    "version": "v1",
    "description": "API for managing student records using CRUD operations."
  },
  "servers": [
    {
      "url": "http://localhost:8083/api",
      "description": "Local development server"
    }
  ],
  "components": {
    "schemas": {
      "Student": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the student (auto-generated)"
          },
          "name": {
            "type": "string",
            "description": "Student's full name"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "Student's email address"
          },
          "markObtained": {
            "type": "integer",
            "description": "Marks obtained by the student"
          },
          "admissionDate": {
            "type": "string",
            "format": "date",
            "description": "Date of student admission (YYYY-MM-DD)"
          }
        },
        "required": [
          "name",
          "email",
          "markObtained",
          "admissionDate"
        ]
      },
      "Error": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "description": "Error code"
          },
          "message": {
            "type": "string",
            "description": "Error message"
          }
        },
        "required": [
          "code",
          "message"
        ]
      }
    },
    "requestBodies": {
      "CreateStudentRequest": {
        "description": "Student object to be created (ID should be absent)",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Student"
            }
          }
        }
      },
      "UpdateStudentRequest": {
        "description": "Student object to be updated (ID is required in the path)",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Student"
            }
          }
        }
      }
    },
    "responses": {
      "200": {
        "description": "Successful operation"
      },
      "201": {
        "description": "Student created successfully",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Student"
            }
          }
        }
      },
      "204": {
        "description": "No content (successful deletion)"
      },
      "400": {
        "description": "Bad request - Invalid input",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "404": {
        "description": "Student not found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "409": {
        "description": "Conflict - Email already exists",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      }
    }
  },
  "paths": {
    "/students": {
      "get": {
        "summary": "Get all students",
        "description": "Retrieves a list of all students.",
        "responses": {
          "200": {
            "description": "A list of students",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Student"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new student",
        "description": "Creates a new student record. The 'id' field should be absent in the request body.",
        "requestBody": {
          "$ref": "#/components/requestBodies/CreateStudentRequest"
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/201"
          },
          "400": {
            "$ref": "#/components/responses/400"
          }
        }
      }
    },
    "/students/{id}": {
      "get": {
        "summary": "Get student by ID",
        "description": "Retrieves a specific student by their ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the student to retrieve",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Student"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      },
      "put": {
        "summary": "Update an existing student",
        "description": "Updates an existing student record.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the student to update",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/UpdateStudentRequest"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/200",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Student"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      },
      "delete": {
        "summary": "Delete a student",
        "description": "Deletes a specific student by their ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the student to delete",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    }
  }
}