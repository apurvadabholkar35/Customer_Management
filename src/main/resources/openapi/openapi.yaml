openapi: 3.0.0
info:
  title: Customer Management API
  version: 1.0.0
  description: API for managing customer data, including CRUD operations and membership tier calculation.

paths:
  /customers:
    post:
      summary: Create a new customer
      operationId: createCustomer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerRequest'
      responses:
        '201':
          description: Customer created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerResponse'
        '400':
          description: Invalid request (e.g., missing or invalid fields)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    get:
      summary: Retrieve all customers
      operationId: getAllCustomers
      responses:
        '200':
          description: List of customers retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomerResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /customers/{id}:
    get:
      summary: Retrieve a customer by ID
      operationId: getCustomerById
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
          description: UUID of the customer to retrieve
      responses:
        '200':
          description: Customer retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerResponse'
        '404':
          description: Customer not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    put:
      summary: Update a customer by ID
      operationId: updateCustomer
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
          description: UUID of the customer to update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerRequest'
      responses:
        '200':
          description: Customer updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerResponse'
        '400':
          description: Invalid request (e.g., missing or invalid fields)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Customer not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    delete:
      summary: Delete a customer by ID
      operationId: deleteCustomer
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
          description: UUID of the customer to delete
      responses:
        '204':
          description: Customer deleted successfully
        '404':
          description: Customer not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    CustomerRequest:
      type: object
      properties:
        name:
          type: string
          description: The name of the customer
          example: John Doe
        email:
          type: string
          format: email
          description: The email address of the customer
          example: john.doe@example.com
        annualSpend:
          type: number
          format: double
          description: The annual spend of the customer
          example: 1500.50
        lastPurchaseDate:
          type: string
          format: date-time
          description: The date and time of the customer's last purchase
          example: '2023-10-26T10:00:00Z'
      required:
        - name
        - email

    CustomerResponse:
      allOf:
        - $ref: '#/components/schemas/CustomerRequest'
        - type: object
          properties:
            id:
              type: string
              format: uuid
              description: The unique identifier of the customer
              example: 123e4567-e89b-12d3-a456-426614174000
            tier:
              type: string
              description: The membership tier of the customer based on annual spend and last purchase date
              enum:
                - Silver
                - Gold
                - Platinum
              example: Gold

    ErrorResponse:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
          description: The timestamp of the error
        status:
          type: integer
          description: The HTTP status code
        error:
          type: string
          description: The error message
        path:
          type: string
          description: The request path
